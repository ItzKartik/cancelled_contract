"use strict"; (self["webpackChunkcarbon"] = self["webpackChunkcarbon"] || []).push([[279], { 40840: function (e, t, a) { a.d(t, { Z: function () { return l } }); var s = a(66252), r = a(3577); (0, s.dD)("data-v-418953e6"); const n = { class: "farm-stats" }, d = { class: "stats-row" }, o = { class: "stats-row" }, i = { class: "stats-row" }, c = { class: "stats-row" }; function w(e, t, a, w, f, l) { return (0, s.wg)(), (0, s.iD)("div", n, [(0, s._)("div", d, "TVL: " + (0, r.zw)(l.TVL) + " ETH - $" + (0, r.zw)(l.TVLinUSD), 1), (0, s._)("div", o, "CARBON Price $" + (0, r.zw)(l.carbonPrice), 1), (0, s._)("div", i, " Circulating Supply " + (0, r.zw)(l.circulatingSupply), 1), (0, s._)("div", c, "Market Cap $" + (0, r.zw)(l.marketCap), 1)]) } (0, s.Cn)(); var f = { name: "Home", computed: { TVL() { return this.$store.getters.displayTVL }, TVLinUSD() { return this.$store.getters.TVLInUSD }, circulatingSupply() { return this.$store.getters.displayCirculatingSupply }, carbonPrice() { return this.$store.getters.displayCarbonPriceInUSD }, marketCap() { return this.$store.getters.displayMarketCap } } }; f.render = w, f.__scopeId = "data-v-418953e6"; var l = f }, 23279: function (e, t, a) { a.r(t), a.d(t, { default: function () { return L } }); var s = a(66252); (0, s.dD)("data-v-3f639aed"); const r = { key: 0, class: "farms" }; function n(e, t, a, n, d, o) { const i = (0, s.up)("FarmFrame"), c = (0, s.up)("FarmInfo"); return o.loaded ? ((0, s.wg)(), (0, s.iD)("div", r, [((0, s.wg)(!0), (0, s.iD)(s.HY, null, (0, s.Ko)(d.contracts, (e => ((0, s.wg)(), (0, s.j4)(i, { key: e, address: e }, null, 8, ["address"])))), 128)), (0, s.Wm)(c)])) : (0, s.kq)("", !0) } (0, s.Cn)(); var d = a(3577), o = a(49963), i = a.p + "img/down-arrow.e3bb8be9.svg"; (0, s.dD)("data-v-5d971eae"); const c = { class: "farm-frame" }, w = { class: "farm-name" }, f = { class: "farm-apr" }, l = { key: 0, class: "warn" }, k = (0, s.Uk)(" ALL REWARDS AND STAKE ARE LOCKED FOR THE 24 HOUR REWARD DURATION "), u = (0, s._)("br", null, null, -1), p = (0, s.Uk)(" BRAVE ENOUGH ANON? "), m = [k, u, p], h = { key: 2, class: "actions" }, A = ["href"], b = { key: 1 }, C = { key: 0 }, D = { key: 1 }, T = { key: 0, class: "input-row" }, g = { class: "input" }, v = { key: 1, class: "input-row" }, S = { class: "input" }, x = { key: 2, class: "input-row" }, y = { class: "dropdown-row" }, E = { class: "dropdown-row" }, _ = { class: "dropdown-row" }, N = { class: "dropdown-row" }; function O(e, t, a, r, n, k) { return (0, s.wg)(), (0, s.iD)("div", c, [(0, s._)("div", w, (0, d.zw)(k.nameText) + " Pool", 1), (0, s._)("div", f, [(0, s._)("div", null, "APR : " + (0, d.zw)(k.APR), 1), (0, s._)("div", { class: "arrow", onClick: t[0] || (t[0] = (...e) => k.toggleDropdown && k.toggleDropdown(...e)) }, [(0, s._)("img", { class: (0, d.C_)(["arrow-svg", { rotate: n.dropdownShown }]), src: i, alt: "" }, null, 2)])]), "0x0BcC628397Ca51562d85376C35eD016968890Ac3" == a.address ? ((0, s.wg)(), (0, s.iD)("div", l, m)) : (0, s.kq)("", !0), k.isConnected ? ((0, s.wg)(), (0, s.iD)("div", h, [0 == k.balanceOfStakedToken && 0 == k.depositedByUser ? ((0, s.wg)(), (0, s.iD)("a", { key: 0, class: "connect pool", target: "_blank", href: k.getOwned }, (0, d.zw)(k.noOwnedText), 9, A)) : ((0, s.wg)(), (0, s.iD)("div", b, [k.isApproved ? ((0, s.wg)(), (0, s.iD)("div", D, [k.balanceOfStakedToken > 0 ? ((0, s.wg)(), (0, s.iD)("div", T, [(0, s._)("button", { onClick: t[3] || (t[3] = (...e) => k.depositStake && k.depositStake(...e)), class: "primary" }, "Stake"), (0, s._)("div", g, [(0, s.wy)((0, s._)("input", { type: "number", "onUpdate:modelValue": t[4] || (t[4] = e => n.stakeAmount = e) }, null, 512), [[o.nr, n.stakeAmount]]), (0, s._)("div", { class: "max-button", onClick: t[5] || (t[5] = (...e) => k.setDepositMax && k.setDepositMax(...e)) }, "Max")])])) : (0, s.kq)("", !0), k.depositedByUser > 0 ? ((0, s.wg)(), (0, s.iD)("div", v, [(0, s._)("button", { onClick: t[6] || (t[6] = (...e) => k.withdrawStake && k.withdrawStake(...e)), class: "primary" }, "Withdraw"), (0, s._)("div", S, [(0, s.wy)((0, s._)("input", { "onUpdate:modelValue": t[7] || (t[7] = e => n.withdrawAmount = e), type: "number" }, null, 512), [[o.nr, n.withdrawAmount]]), (0, s._)("div", { class: "max-button", onClick: t[8] || (t[8] = (...e) => k.setWithdrawMax && k.setWithdrawMax(...e)) }, "Max")])])) : (0, s.kq)("", !0), k.rewardsEarned > 0 ? ((0, s.wg)(), (0, s.iD)("div", x, [(0, s._)("button", { class: "claim", onClick: t[9] || (t[9] = (...e) => k.getReward && k.getReward(...e)) }, " Claim " + (0, d.zw)(k.formatUnits(k.rewardsEarned, 6)) + " " + (0, d.zw)(k.rewardTokenName), 1), (0, s._)("button", { class: "claim", onClick: t[10] || (t[10] = (...e) => k.exit && k.exit(...e)) }, "Claim and withdraw all")])) : (0, s.kq)("", !0)])) : ((0, s.wg)(), (0, s.iD)("div", C, [(0, s._)("button", { onClick: t[2] || (t[2] = (...e) => k.approveMax && k.approveMax(...e)), class: "approve" }, " Approve " + (0, d.zw)(k.stakedTokenName), 1)]))])), (0, s._)("div", { class: (0, d.C_)(["dropdown", { collapsed: !n.dropdownShown }]) }, [(0, s._)("div", y, " Your Stake : " + (0, d.zw)(k.formatUnits(k.depositedByUser, 6)) + " " + (0, d.zw)(k.stakedTokenName), 1), (0, s._)("div", E, " Your Unclaimed Rewards : " + (0, d.zw)(k.formatUnits(k.rewardsEarned, 6)) + " " + (0, d.zw)(k.rewardTokenName), 1), (0, s._)("div", _, (0, d.zw)(k.stakedTokenName) + " Balance : " + (0, d.zw)(k.formatUnits(k.balanceOfStakedToken, 6)), 1), (0, s._)("div", N, " Total Staked : " + (0, d.zw)(k.formatUnits(k.totalStaked, 3)) + " " + (0, d.zw)(k.stakedTokenName), 1)], 2)])) : ((0, s.wg)(), (0, s.iD)("button", { key: 1, class: "connect", onClick: t[1] || (t[1] = (...e) => k.connectWallet && k.connectWallet(...e)) }, " Connect Wallet "))]) } (0, s.Cn)(); var U = a(50387), R = a(77616), B = a(84929), $ = a(67489), I = { props: ["address"], data() { return { stakeAmount: "0", withdrawAmount: "0", dropdownShown: !1 } }, computed: { nameText() { return "0x0000000000000000000000000000000000000000" === this.stakedToken ? "ETH" : "0xfa42DA1bd08341537a44a4ca9D236D1c00A98b40" === this.stakedToken ? "CARBON" : "0x08da83452Ae158c3F348d4e0789b7A78989f34eE" === this.stakedToken ? "ETH-CARBON LP" : "0x89450F6C7d7f2c5971E9Ee28e94d8b199d17f673" === this.stakedToken ? "CARBON-NYAN LP" : "" }, noOwnedText() { return "0x0000000000000000000000000000000000000000" === this.stakedToken ? "You need to get ETH" : "0xfa42DA1bd08341537a44a4ca9D236D1c00A98b40" === this.stakedToken ? "Buy CARBON on SUSHI" : "0x08da83452Ae158c3F348d4e0789b7A78989f34eE" === this.stakedToken ? "Deposit CARBON-ETH LP on SUSHI" : "0x89450F6C7d7f2c5971E9Ee28e94d8b199d17f673" === this.stakedToken ? "Deposit NYAN-CARBON LP on SUSHI" : "" }, getOwned() { return "0xfa42DA1bd08341537a44a4ca9D236D1c00A98b40" === this.stakedToken ? "https://app.sushi.com/swap?inputCurrency=ETH&outputCurrency=0xfa42DA1bd08341537a44a4ca9D236D1c00A98b40" : "0x08da83452Ae158c3F348d4e0789b7A78989f34eE" === this.stakedToken ? "https://app.sushi.com/add/ETH/0xfa42DA1bd08341537a44a4ca9D236D1c00A98b40" : "0x89450F6C7d7f2c5971E9Ee28e94d8b199d17f673" === this.stakedToken ? "https://app.sushi.com/add/0xfa42DA1bd08341537a44a4ca9D236D1c00A98b40/0xeD3fB761414DA74b74F33e5c5a1f78104b188DfC" : "" }, isApproved() { return this.$store.state.farm.farmInfo[this.address].approvedAmount.gt(0) }, isConnected() { return this.$store.getters.isConnected }, rewardPrice() { return this.$store.state.farm.CarbonPrice }, rewardTokenName() { return this.$store.state.farm.farmInfo[this.address].rewardName }, stakedTokenName() { return this.$store.state.farm.farmInfo[this.address].stakedName }, totalStaked() { return this.$store.state.farm.farmInfo[this.address].totalSupply }, valueOfTotalStaked() { return this.$store.state.farm.farmInfo[this.address].valueOfTotalStaked }, depositedByUser() { return this.$store.state.farm.farmInfo[this.address].depositedByUser }, rewardsEarned() { return this.$store.state.farm.farmInfo[this.address].rewardsEarned }, balanceOfStakedToken() { return this.$store.state.farm.farmInfo[this.address].stakeTokenBalance }, balanceOfRewardToken() { return this.$store.state.farm.farmInfo[this.address].rewardTokenBalance }, stakedToken() { return this.$store.state.farm.farmInfo[this.address].stakedToken }, APR() { let e = this.$store.state.farm.farmInfo[this.address].APR; return e.substring(0, e.indexOf(".") + 3) + "%" } }, methods: { connectWallet() { this.$store.commit("setWalletConnectModalShown", !0) }, async approveMax() { let e = window.web3.getSigner(), t = new U.CH(this.stakedToken, $, e); await t.approve(this.address, "0xffffffffffffffffffffffffffffffffffffffff") }, toggleDropdown() { this.dropdownShown = !this.dropdownShown }, setDepositMax() { "ETH" === this.stakedTokenName ? this.stakeAmount = R.dF(this.balanceOfStakedToken.sub("3000000000000000")) : this.stakeAmount = R.dF(this.balanceOfStakedToken) }, setWithdrawMax() { this.withdrawAmount = R.dF(this.depositedByUser) }, formatUnits(e, t = 2) { if (0 == e) return "0"; let a = parseFloat(R.bM(e, 18)).toLocaleString(void 0, { minimumFractionDigits: t }); return a }, async getReward() { let e = window.web3.getSigner(), t = new U.CH(this.address, B, e); await t.getReward() }, async exit() { let e = window.web3.getSigner(), t = new U.CH(this.address, B, e); await t.exit() }, async withdrawStake() { let e = window.web3.getSigner(), t = new U.CH(this.address, B, e), a = R.fi(this.withdrawAmount.toString()); await t.withdraw(a) }, async depositStake() { let e = window.web3.getSigner(), t = new U.CH(this.address, B, e), a = R.fi(this.stakeAmount.toString()), s = {}; "ETH" === this.stakedTokenName && (s["value"] = a), await t.stake(a, s) } } }; I.render = O, I.__scopeId = "data-v-5d971eae"; var F = I, H = a(40840), z = { components: { FarmFrame: F, FarmInfo: H.Z }, computed: { loaded() { return this.$store.state.farmInfoLoaded }, connectedToArbitrum() { return this.$store.getters.connectedToArbitrum } }, data() { return { contracts: ["0x27F0408729dCC6A4672e1062f5003D2a07E4E10D", "0x701e594B58b183b93C1ebaE437fBC9a9A3eC97d7", "0x2C5058325373d02Dfd6c08E48d91FcAf8fD49f45", "0x45acd6Af27B2506ad68C0fEA9F597D6eE6818722", "0x0BcC628397Ca51562d85376C35eD016968890Ac3"] } } }; z.render = n, z.__scopeId = "data-v-3f639aed"; var L = z } }]);
//# sourceMappingURL=279.4156f9bc.js.map